from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_password_length=None):  # noqa: E501
        """Settings - a model defined in OpenAPI

        :param min_password_length: The min_password_length of this Settings.  # noqa: E501
        :type min_password_length: int
        """
        self.openapi_types = {
            'min_password_length': int
        }

        self.attribute_map = {
            'min_password_length': 'minPasswordLength'
        }

        self._min_password_length = min_password_length

    @classmethod
    def from_dict(cls, dikt) -> 'Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Settings of this Settings.  # noqa: E501
        :rtype: Settings
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_password_length(self) -> int:
        """Gets the min_password_length of this Settings.


        :return: The min_password_length of this Settings.
        :rtype: int
        """
        return self._min_password_length

    @min_password_length.setter
    def min_password_length(self, min_password_length: int):
        """Sets the min_password_length of this Settings.


        :param min_password_length: The min_password_length of this Settings.
        :type min_password_length: int
        """

        self._min_password_length = min_password_length
