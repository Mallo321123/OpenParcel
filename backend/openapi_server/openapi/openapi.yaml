openapi: 3.0.3
info:
  contact:
    email: mario@binary-kitchen.de
  description: Manages outgoing packages for small online shops
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: OpenParcel
  version: 0.1.0
servers:
- url: https://127.0.0.1:8080/api
tags:
- name: dashboard
- name: settings
- name: orders
- name: products
- name: lights
- description: Operations about user
  name: user
paths:
  /dashboard:
    get:
      description: lists dashboard information
      operationId: dashboard_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                maxItems: 100
                type: array
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: Not Found
      security:
      - cookieAuth: []
      summary: list dashboard information
      tags:
      - dashboard
      x-openapi-router-controller: openapi_server.controllers.dashboard_controller
  /lights/devices:
    delete:
      description: deletes a light
      operationId: lights_devices_delete
      parameters:
      - description: The light that needs to be deleted
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          description: succesfull operation
        "400":
          description: Invalid id supplied
        "404":
          description: light not found
        "429":
          description: Too Many Requests
        default:
          description: Too Many Requests
      security:
      - cookieAuth: []
      summary: delete a light
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    get:
      description: list all light devices
      operationId: lights_devices_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lights_response'
                maxItems: 100
                type: array
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: list lights
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    post:
      description: adds a new Light device
      operationId: light_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lights'
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unathorized
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: add light device
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    put:
      description: change a Light device
      operationId: light_change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lights'
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: change light device
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
  /lights/group:
    delete:
      description: deletes a light grouo
      operationId: lights_group_delete
      parameters:
      - description: The group that needs to be deleted
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          description: succesfull operation
        "400":
          description: Invalid id supplied
        "404":
          description: group not found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: delete a light group
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    get:
      description: returns all light groups
      operationId: lights_group_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Groups_response'
                maxItems: 100
                type: array
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Not Found
        default:
          description: default
      security:
      - cookieAuth: []
      summary: list all light groups
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    post:
      description: adds a new Light group
      operationId: lights_group_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups'
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unathorized
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: add light group
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
  /lights/map:
    delete:
      description: deletes a mapper
      operationId: lights_map_delete
      parameters:
      - description: The mapper that needs to be deleted
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          description: succesfull operation
        "400":
          description: Invalid id supplied
        "404":
          description: mapper not found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: delete a mapper
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    get:
      description: lists all mappings
      operationId: lights_map_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                maxItems: 100
                type: array
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: list all mappings
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    post:
      description: map a light to a product
      operationId: lights_map_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map'
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unathorized
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: add a light - product mapping
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
    put:
      description: change a mapping
      operationId: lights_map_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map'
        required: true
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: change a light - product mapping
      tags:
      - lights
      x-openapi-router-controller: openapi_server.controllers.lights_controller
  /orders:
    delete:
      description: deletes a order
      operationId: orders_delete
      parameters:
      - description: The order that needs to be deleted
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          description: succesfull operation
        "400":
          description: Invalid id supplied
        "404":
          description: order not found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: delete a order
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    get:
      description: lists all orders
      operationId: orders_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders_response'
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: list all orders
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    post:
      description: adds an order
      operationId: orders_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Orders_add'
      responses:
        "200":
          description: successful operation
        "401":
          description: Unathorized
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: add an order
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    put:
      description: updates an order
      operationId: orders_put
      parameters:
      - description: The order that needs to be updated
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Orders_change'
      responses:
        "200":
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: update an order
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /orders/info:
    get:
      description: returns information about a specific order
      operationId: orders_info_get
      parameters:
      - description: The order that needs to be fetched
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders_response_item'
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: order information
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /orders/list:
    get:
      description: list orders after certain criteria
      operationId: orders_list_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: state of the order
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - open
          - working
          - hold
          - closed
          maxLength: 20
          type: string
        style: form
      - description: customer
        explode: true
        in: query
        name: customer
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      - description: shipment type
        explode: true
        in: query
        name: shipment
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - id
          - customer
          - state
          - shipmentType
          - addDate
          - closeDate
          maxLength: 255
          type: string
        style: form
      - description: Sort order
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders_response'
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: list orders
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /products:
    delete:
      description: deletes a product
      operationId: products_delete
      parameters:
      - description: The product that needs to be deleted
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          description: succesfull operation
        "400":
          description: Invalid id supplied
        "404":
          description: product not found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: delete a product
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    get:
      description: lists all avaiable products
      operationId: products_list
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Products_response'
                maxItems: 100
                type: array
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: list of products
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    post:
      description: adds a product
      operationId: product_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        "200":
          description: successful operation
        "401":
          description: Unathorized
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: add a product
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    put:
      description: updates product properties
      operationId: update_product
      parameters:
      - description: id of user that needs to be changed
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products_update'
      responses:
        "200":
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: update product
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
  /products/info:
    get:
      description: returns information about a specific product
      operationId: products_info_get
      parameters:
      - description: The product that needs to be fetched
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products_response'
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      summary: product information
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
  /products/list:
    get:
      description: lists products after certain criteria
      operationId: products_list_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: true
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - description: name of the product
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      - description: difficulty of the product
        explode: true
        in: query
        name: difficulty
        required: false
        schema:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
        style: form
      - description: Sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name
          - difficulty
          maxLength: 255
          type: string
        style: form
      - description: Sort order
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          maxLength: 255
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Products_response'
                maxItems: 200
                type: array
          description: successful operation
        "401":
          description: Unathorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        default:
          description: default
      security:
      - cookieAuth: []
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
  /settings:
    get:
      description: list all current settings states
      operationId: settings_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unathorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
        default:
          description: default
      security:
      - cookieAuth: []
      summary: display settings
      tags:
      - settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: updates settings
      operationId: settings_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequest'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unathorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
        default:
          description: default
      security:
      - cookieAuth: []
      summary: update settings
      tags:
      - settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
  /token:
    get:
      description: valids provided token
      operationId: token_valid
      responses:
        "200":
          description: Token is valid
        "400":
          description: Invalid Request
        "204":
          description: Token is invalid
        default:
          description: default
      security:
      - cookieAuth: []
      summary: valid token
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user:
    delete:
      description: This can only be done by the logged in user.
      operationId: delete_user
      parameters:
      - description: The name that needs to be deleted
        explode: true
        in: query
        name: username
        required: true
        schema:
          maxLength: 20
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResponse'
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unathorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: User not found
        default:
          description: default
      security:
      - cookieAuth: []
      summary: Delete user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      description: ""
      operationId: get_user_by_name
      parameters:
      - description: 'The name that needs to be fetched. Use user1 for testing. '
        explode: true
        in: query
        name: username
        required: true
        schema:
          maxLength: 20
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unathorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: User not found
        default:
          description: default
      security:
      - cookieAuth: []
      summary: Get user by user name
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      description: This can only be done by the logged in user.
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Created'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequest'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unathorized
      summary: Create user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    put:
      description: This can only be done by the logged in user.
      operationId: update_user
      parameters:
      - description: name of user that needs to be changed
        explode: true
        in: query
        name: username
        required: true
        schema:
          maxLength: 20
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_change'
        description: Update an existent user in the store
      responses:
        default:
          description: successful operation
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Updated'
          description: updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequest'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unathorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      security:
      - cookieAuth: []
      summary: Update user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/list:
    get:
      description: list all users
      operationId: user_list_get
      parameters:
      - description: items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 200
          minimum: 0
          type: integer
        style: form
      - description: page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User_response'
                maxItems: 100
                type: array
          description: succesfull operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Unauthorized
      security:
      - cookieAuth: []
      summary: list users
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/login:
    post:
      description: Authenticates a user and returns a JWT token.
      operationId: security_controller_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/security_controller_login_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/security_controller_login_200_response'
          description: Successfully authenticated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequest'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unathorized'
          description: Invalid credentials
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: Too Many Requests
        default:
          description: default
      security: []
      summary: User Login
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /user/logout:
    get:
      description: ""
      operationId: logout_user
      parameters: []
      responses:
        default:
          description: successful operation
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      security:
      - cookieAuth: []
      summary: Logs out current logged in user session
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
components:
  schemas:
    Updated:
      additionalProperties: false
      example:
        message: Updated
      properties:
        message:
          example: Updated
          maxLength: 255
          title: message
          type: string
      title: Updated
      type: object
    NotFound:
      additionalProperties: false
      example:
        message: Not Found
      properties:
        message:
          example: Not Found
          maxLength: 255
          title: message
          type: string
      title: NotFound
      type: object
    TooManyRequests:
      additionalProperties: false
      example:
        message: Too Many Requests
      properties:
        message:
          example: Too Many Requests
          maxLength: 255
          title: message
          type: string
      title: TooManyRequests
      type: object
    Created:
      additionalProperties: false
      example:
        message: Created
      properties:
        message:
          example: Created
          maxLength: 255
          title: message
          type: string
      title: Created
      type: object
    SuccessfulResponse:
      additionalProperties: false
      example:
        message: Successful operation
      properties:
        message:
          example: Successful operation
          maxLength: 255
          title: message
          type: string
      title: SuccessfulResponse
      type: object
    InvalidRequest:
      additionalProperties: false
      example:
        message: Invalid Request
      properties:
        message:
          example: Invalid Request
          maxLength: 255
          title: message
          type: string
      title: InvalidRequest
      type: object
    InternalServerError:
      additionalProperties: false
      example:
        message: Internal Server Error
      properties:
        message:
          example: Internal Server Error
          maxLength: 255
          title: message
          type: string
      title: InternalServerError
      type: object
    Unathorized:
      additionalProperties: false
      example:
        message: Unathorized
      properties:
        message:
          example: Unathorized
          maxLength: 255
          title: message
          type: string
      title: Unathorized
      type: object
    Settings:
      additionalProperties: false
      example:
        minPasswordLength: 5
      properties:
        minPasswordLength:
          example: 5
          format: int64
          maximum: 1024
          minimum: 0
          title: minPasswordLength
          type: integer
        tokenExpiration:
          example: 24
          format: int64
          maximum: 2147483647
          minimum: 0
          title: tokenExpiration
          type: integer
        maxLoginTries:
          example: 5
          format: int64
          maximum: 2147483647
          minimum: 0
          title: maxLoginTries
          type: integer
        blockTime:
          example: 600
          format: int64
          maximum: 2147483647
          minimum: 0
          title: blockTime
          type: integer
      title: Settings
      type: object
    Dashboard:
      additionalProperties: false
      example:
        done: 420
        open: 23
        lights: 10
        mappers: 10
        products: 15
        hold: 0
      properties:
        hold:
          description: count of orders on hold
          example: 0
          title: hold
          type: integer
        open:
          description: count of open orders
          example: 23
          title: open
          type: integer
        done:
          description: count of completed orders
          example: 420
          title: done
          type: integer
        products:
          description: count of avaiable products
          example: 15
          title: products
          type: integer
        lights:
          example: 10
          title: lights
          type: integer
        mappers:
          example: 10
          title: mappers
          type: integer
      title: Dashboard
      type: object
    Order_products:
      additionalProperties: false
      example:
        id: 2
        count: 5
      properties:
        id:
          example: 2
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        count:
          example: 5
          format: int32
          maximum: 2147483647
          minimum: 0
          title: count
          type: integer
      title: Order_products
      type: object
    Orders_add:
      additionalProperties: false
      example:
        state: open
        customer: Max Mustermann
        products:
        - id: 101
          count: 1
        - id: 42
          count: 1
        comment: Example comment
        shipmentType: DHL
      properties:
        customer:
          example: Max Mustermann
          maxLength: 255
          title: customer
          type: string
        products:
          items:
            $ref: '#/components/schemas/Order_products'
          maxItems: 255
          title: products
          type: array
        state:
          enum:
          - open
          - working
          - hold
          - closed
          example: open
          title: state
          type: string
        comment:
          maxLength: 255
          title: comment
          type: string
        shipmentType:
          maxLength: 255
          title: shipmentType
          type: string
      title: Orders_add
      type: object
    Orders_response:
      additionalProperties: false
      example:
        totalItems: 100
        items:
        - dateAdd: 2024-12-26 23:58:48.260781
          id: 5610
          state: open
          dateClosed: 2024-12-26 23:58:48.260781
          customer: Max Mustermann
          products:
          - id: 101
            count: 1
          - id: 42
            count: 1
          comment: Example comment
          shipmentType: DHL
        - dateAdd: 2024-12-26 23:58:48.260781
          id: 5610
          state: open
          dateClosed: 2024-12-26 23:58:48.260781
          customer: Max Mustermann
          products:
          - id: 101
            count: 1
          - id: 42
            count: 1
          comment: Example comment
          shipmentType: DHL
        - dateAdd: 2024-12-26 23:58:48.260781
          id: 5610
          state: open
          dateClosed: 2024-12-26 23:58:48.260781
          customer: Max Mustermann
          products:
          - id: 101
            count: 1
          - id: 42
            count: 1
          comment: Example comment
          shipmentType: DHL
        - dateAdd: 2024-12-26 23:58:48.260781
          id: 5610
          state: open
          dateClosed: 2024-12-26 23:58:48.260781
          customer: Max Mustermann
          products:
          - id: 101
            count: 1
          - id: 42
            count: 1
          comment: Example comment
          shipmentType: DHL
        - dateAdd: 2024-12-26 23:58:48.260781
          id: 5610
          state: open
          dateClosed: 2024-12-26 23:58:48.260781
          customer: Max Mustermann
          products:
          - id: 101
            count: 1
          - id: 42
            count: 1
          comment: Example comment
          shipmentType: DHL
      properties:
        totalItems:
          example: 100
          format: int32
          maximum: 2147483647
          minimum: 0
          title: totalItems
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Orders_response_item'
          maxItems: 200
          title: items
          type: array
      title: Orders_response
      type: object
    Orders_response_item:
      additionalProperties: false
      example:
        dateAdd: 2024-12-26 23:58:48.260781
        id: 5610
        state: open
        dateClosed: 2024-12-26 23:58:48.260781
        customer: Max Mustermann
        products:
        - id: 101
          count: 1
        - id: 42
          count: 1
        comment: Example comment
        shipmentType: DHL
      properties:
        id:
          example: 5610
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        customer:
          example: Max Mustermann
          maxLength: 255
          title: customer
          type: string
        products:
          items:
            $ref: '#/components/schemas/Order_products'
          maxItems: 255
          title: products
          type: array
        state:
          enum:
          - open
          - working
          - hold
          - closed
          example: open
          title: state
          type: string
        dateAdd:
          example: 2024-12-26 23:58:48.260781
          maxLength: 255
          title: dateAdd
          type: string
        dateClosed:
          example: 2024-12-26 23:58:48.260781
          maxLength: 255
          title: dateClosed
          type: string
        comment:
          maxLength: 255
          title: comment
          type: string
        shipmentType:
          maxLength: 255
          title: shipmentType
          type: string
      title: Orders_response_item
      type: object
    Orders_change:
      additionalProperties: false
      example:
        dateAdd: 2024-12-26 23:58:48.260781
        state: open
        dateClosed: 2024-12-26 23:58:48.260781
        customer: Max Mustermann
        products:
        - id: 101
          count: 1
        - id: 42
          count: 1
        comment: Example comment
        shipmentType: DHL
      properties:
        customer:
          example: Max Mustermann
          maxLength: 255
          title: customer
          type: string
        products:
          items:
            $ref: '#/components/schemas/Order_products'
          maxItems: 255
          title: products
          type: array
        state:
          enum:
          - open
          - working
          - hold
          - closed
          example: open
          title: state
          type: string
        dateAdd:
          example: 2024-12-26 23:58:48.260781
          maxLength: 255
          title: dateAdd
          type: string
        dateClosed:
          example: 2024-12-26 23:58:48.260781
          maxLength: 255
          title: dateClosed
          type: string
        comment:
          maxLength: 255
          title: comment
          type: string
        shipmentType:
          maxLength: 255
          title: shipmentType
          type: string
      title: Orders_change
      type: object
    User:
      additionalProperties: false
      example:
        firstName: John
        lastName: James
        userGroups:
        - admin
        - lights
        password: "12345"
        userStatus: 1
        email: john@email.com
        username: theUser
      properties:
        username:
          example: theUser
          maxLength: 15
          title: username
          type: string
        firstName:
          example: John
          maxLength: 20
          title: firstName
          type: string
        lastName:
          example: James
          maxLength: 20
          title: lastName
          type: string
        email:
          example: john@email.com
          maxLength: 100
          title: email
          type: string
        password:
          example: "12345"
          maxLength: 255
          title: password
          type: string
        userStatus:
          description: User Status
          example: 1
          format: int32
          maximum: 1
          minimum: 0
          title: userStatus
          type: integer
        userGroups:
          items:
            enum:
            - admin
            - products
            - lights
            - settings
            - orders
            example: admin
            maxLength: 200
            type: string
          maxItems: 100
          title: userGroups
          type: array
      title: User
      type: object
    User_change:
      additionalProperties: false
      example:
        firstName: John
        lastName: James
        userGroups:
        - admin
        - lights
        password: "12345"
        userStatus: 1
        email: john@email.com
      properties:
        firstName:
          example: John
          maxLength: 20
          title: firstName
          type: string
        lastName:
          example: James
          maxLength: 20
          title: lastName
          type: string
        email:
          example: john@email.com
          maxLength: 100
          title: email
          type: string
        password:
          example: "12345"
          title: password
          type: string
        userStatus:
          description: User Status
          example: 1
          format: int32
          maximum: 1
          minimum: 0
          title: userStatus
          type: integer
        userGroups:
          items:
            enum:
            - admin
            - products
            - lights
            - settings
            - orders
            example: admin
            maxLength: 200
            type: string
          maxItems: 100
          title: userGroups
          type: array
      title: User
      type: object
    User_response:
      additionalProperties: false
      example:
        firstName: John
        lastName: James
        userGroups:
        - admin
        - lights
        userStatus: 1
        email: john@email.com
        username: theUser
        id: 1
      properties:
        id:
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        username:
          example: theUser
          maxLength: 15
          title: username
          type: string
        firstName:
          example: John
          maxLength: 20
          title: firstName
          type: string
        lastName:
          example: James
          maxLength: 20
          title: lastName
          type: string
        email:
          example: john@email.com
          maxLength: 100
          title: email
          type: string
        userStatus:
          description: User Status
          example: 1
          format: int32
          title: userStatus
          type: integer
        userGroups:
          items:
            enum:
            - admin
            - products
            - lights
            - settings
            - orders
            example: admin
            maxLength: 200
            type: string
          maxItems: 100
          title: userGroups
          type: array
      title: User_response
      type: object
    Products:
      additionalProperties: false
      example:
        difficulty: 3
        customerGroups:
        - adults
        - nerds
        buildTime: 20-30 min
        name: openDTU
        comment: example comment
      properties:
        name:
          example: openDTU
          maxLength: 255
          title: name
          type: string
        comment:
          example: example comment
          maxLength: 65535
          title: comment
          type: string
        difficulty:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          example: 3
          title: difficulty
          type: integer
        buildTime:
          example: 20-30 min
          maxLength: 255
          title: buildTime
          type: string
        customerGroups:
          items:
            maxLength: 255
            type: string
          maxItems: 100
          title: customerGroups
          type: array
      title: Products
      type: object
    Products_response:
      additionalProperties: false
      example:
        totalItems: 100
        items:
        - difficulty: 3
          customerGroups:
          - adults
          - nerds
          buildTime: 20-30 min
          name: openDTU
          comment: example comment
          id: 1
        - difficulty: 3
          customerGroups:
          - adults
          - nerds
          buildTime: 20-30 min
          name: openDTU
          comment: example comment
          id: 1
        - difficulty: 3
          customerGroups:
          - adults
          - nerds
          buildTime: 20-30 min
          name: openDTU
          comment: example comment
          id: 1
        - difficulty: 3
          customerGroups:
          - adults
          - nerds
          buildTime: 20-30 min
          name: openDTU
          comment: example comment
          id: 1
        - difficulty: 3
          customerGroups:
          - adults
          - nerds
          buildTime: 20-30 min
          name: openDTU
          comment: example comment
          id: 1
      properties:
        totalItems:
          example: 100
          format: int32
          maximum: 2147483647
          minimum: 0
          title: totalItems
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Products_response_item'
          maxItems: 200
          title: items
          type: array
      title: Products_response
      type: object
    Products_response_item:
      additionalProperties: false
      example:
        difficulty: 3
        customerGroups:
        - adults
        - nerds
        buildTime: 20-30 min
        name: openDTU
        comment: example comment
        id: 1
      properties:
        id:
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        name:
          example: openDTU
          maxLength: 255
          title: name
          type: string
        comment:
          example: example comment
          maxLength: 65535
          title: comment
          type: string
        difficulty:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          example: 3
          title: difficulty
          type: integer
        buildTime:
          example: 20-30 min
          maxLength: 255
          title: buildTime
          type: string
        customerGroups:
          items:
            maxLength: 255
            type: string
          maxItems: 100
          title: customerGroups
          type: array
      title: Products_response_item
      type: object
    Products_update:
      additionalProperties: false
      example:
        difficulty: 3
        customerGroups:
        - adults
        - nerds
        buildTime: 20-30 min
        name: openDTU
        comment: example comment
      properties:
        name:
          example: openDTU
          maxLength: 255
          title: name
          type: string
        comment:
          example: example comment
          maxLength: 65535
          title: comment
          type: string
        difficulty:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          example: 3
          title: difficulty
          type: integer
        buildTime:
          example: 20-30 min
          maxLength: 255
          title: buildTime
          type: string
        customerGroups:
          items:
            maxLength: 255
            type: string
          maxItems: 100
          title: customerGroups
          type: array
      title: Products_update
      type: object
    Groups:
      additionalProperties: false
      example:
        name: regal rechts
      properties:
        name:
          example: regal rechts
          maxLength: 255
          title: name
          type: string
      title: Groups
      type: object
    Groups_response:
      additionalProperties: false
      example:
        name: regal rechts
        id: 1
      properties:
        id:
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        name:
          example: regal rechts
          maxLength: 255
          title: name
          type: string
      title: Groups_response
      type: object
    Lights:
      additionalProperties: false
      example:
        comment: example comment
        groups:
          name: regal rechts
          id: 1
        adress: wled1.local
      properties:
        groups:
          items:
            example: drawer left
            maxLength: 200
            type: string
          maxItems: 100
          title: userGroups
          type: array
        adress:
          example: wled1.local
          maxLength: 255
          title: adress
          type: string
        comment:
          example: example comment
          maxLength: 65535
          title: comment
          type: string
      title: Lights
      type: object
    Lights_response:
      additionalProperties: false
      example:
        comment: example comment
        groups:
          name: regal rechts
          id: 1
        online: 1
        adress: wled1.local
        id: 1
      properties:
        id:
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        groups:
          items:
            example: drawer left
            maxLength: 200
            type: string
          maxItems: 100
          title: userGroups
          type: array
        adress:
          example: wled1.local
          maxLength: 255
          title: adress
          type: string
        comment:
          example: example comment
          maxLength: 65535
          title: comment
          type: string
        online:
          enum:
          - 1
          - 0
          example: 1
          title: online
          type: integer
      title: Lights_response
      type: object
    Map:
      additionalProperties: false
      example:
        productId:
        - 10
        - 10
        name: blinky
        id: 1
        lightId:
        - 5
        - 5
      properties:
        id:
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 0
          title: id
          type: integer
        name:
          example: blinky
          maxLength: 255
          title: name
          type: string
        productId:
          items:
            example: 10
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
          maxItems: 100
          title: productId
          type: array
        lightId:
          items:
            example: 5
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
          maxItems: 100
          title: lightId
          type: array
      title: Map
      type: object
    security_controller_login_request:
      additionalProperties: false
      properties:
        username:
          example: theUser
          maxLength: 15
          title: username
          type: string
        password:
          example: "12345"
          maxLength: 255
          title: password
          type: string
      required:
      - password
      - username
      title: security_controller_login_request
      type: object
    security_controller_login_200_response:
      additionalProperties: false
      example:
        token: token
        message: ogin successful.
        success: true
      properties:
        message:
          title: message
          type: string
        success:
          title: success
          type: boolean
        token:
          maxLength: 255
          title: token
          type: string
      title: security_controller_login_200_response
      type: object
  securitySchemes:
    cookieAuth:
      in: cookie
      name: access_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_cookieAuth
